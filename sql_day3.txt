--cast()
select 1+'a' as total
select 'a'+'a' as concate
--cast(expression as target type[(length)])
--expression can be any literal value or a valid expression of any type
--target type - the data type that we want to convert to(sql_variant, int,bit)
--length is optional. default length is 30
select cast(3.14 as int) result
select cast(3.54 as dec(3,0))as result

select cast('2022-08-12' as datetime)todaysdate

select month(getdate())mon, cast(sum(salary) *12 as int)totsal from tblEmployee

select cast(12500 as money)currency

/*isnull() when we want a specific value that needs to be returned if the expression
value is null*/
select isnull(null,'hello')as greetings

select * from tblemployee

create table nulltest
(serialno int,
ename varchar(30),loc varchar(20),age int, occupation varchar(20))

insert into nulltest values(4,'Inamdar','Agra',null,'Software Engg'),
(2,'Payal','Pune',null,'Dancer'),(3,'Lakshya','Mumbai',22,'Doctor')

select * from nulltest

select serialno,ename,loc,isnull(age,25)as 'Age',occupation from nulltest

insert into nulltest values(100,'Roger','USA',isnull(null,99),'Singer')

/*Coalesce
is used to handle null values in data records. It evaluates a set of input parameters and
returns the first non - null value
-running 2 or more queries as a single query
- shortcut alternate to case
- since coalesce is an expression by itself, it can be used in any statement or clause that 
accepts expression like select, where, having


*/
select coalesce(null,null,35,null,100)
select * from tblEmployee
alter table tblemployee add lastname varchar(20)

update tblemployee set lastname='Gupta' where empid=1

select empid, empname,lastname,
coalesce(empname,lastname)as 'not null lastname' from tblemployee

select empid,empname,lastname,
case
 when empname is not null then empname
 when lastname is not null then lastname
 else null
 end as 'not null names' from tblemployee

 select empid, empname,lastname,coalesce(empid,empname,lastname)as 'new value'
 from tblemployee

 --if in case the above kind of query returns data conversion errors then use it 
 --as below
 select empid, empname,lastname,coalesce(convert(varchar(30),empid),empname,lastname)as 'new value'
 from tblemployee

 alter table dummy
 add hourly_rate int

 update dummy set commission=null where dummyid=13

 select * from dummy

  select dummyid, dummyname,salary,
 coalesce(salary,hourly_rate*7*30 +
 coalesce(commission,20))as compensation from dummy
 
 /*both isnull() and coalesce() are used to evaluate and provide default if the 
 evaluation value is null
 - Both return null, if all value/s are null
 - both can work with different datatypes

 differences
 - coalesce is ANSI compatible, and hence can work with other sql platforms like oracle etc
 -is null is limited to take only 2 parameters, but coalesce can take many*/
  select coalesce(null,null,null,5) as result 
 select isnull(null,isnull(null,3))as newresults 

 select isnull(null,null)

 select coalesce(null,null)

 declare @c char(1)  -- unassigned value but @c is typed 
 select coalesce(null,null,@c)

 select firstname,middlename,lastname,suffix + ' ' +
 coalesce(middlename, ' ' )+lastname +' '+coalesce(suffix,' ')as 'Fullname' from table



/* Union , Union All
 select col1,col2,col3
 from table1
 union /union all
 select col5,col6,col7
 from table2*/

 drop table grades
 create table Grades2
 (
   TId int identity(1,1),
   Tname varchar(30),
   Tgrade char(1),
   TPercentage int)

   insert into grades2 values('Yudhister','O',95),('Bheem','A',90),('Arjun','B',76),
   ('Nakul','B',60)

   update grades2 set tname='Raja' where tname like'Yu%'
   select * from grades1
   select * from grades2

   select tname,tgrade,tpercentage from grades1
   union 
   select tname,tgrade,tpercentage from Grades2

   /*intersect
   Except*/
   create table emp(ID int primary key,
   EName varchar(20),Age int,City varchar(20))

   create table Bonus(Bonusid int, Eid int references emp(ID),
   Amount float)

   insert into emp values(1,'Tushar',22,'Delhi'),(2,'Abhishek',21,'Nagpur'),
   (3,'Harshitha',21,'Bangalore')
   insert into Bonus values(101,1,20000),(102,3,25000)
   select * from emp select * from bonus

   select Id,Ename,Amount
   from emp left join bonus on emp.id=bonus.Eid
   intersect
   select Id,Ename,Amount
   from emp right join bonus on emp.id=bonus.Eid

    select Id,Ename,Amount
   from emp left join bonus on emp.id=bonus.Eid
    except
   select Id,Ename,Amount
   from emp right join bonus on emp.id=bonus.Eid

   select * from sys.indexes
/*views 
are virtual tables/relation. 
- do not occupy space in the memory
- only the view text is stored under the view object and not data
- are constructed based on the underlying table
- can use it to retrieve the data */

drop view vwemployeebydept

create view vwEmployeeByDept
as
select Empid,Empname,Salary,DeptName from tblemployee join tblDepartment
on tblEmployee.did=tblDepartment.DeptId 

sp_help vwemployeebydept

select  * from vwEmployeeByDept
select * from tblemployee
drop view vwemp
create view vwemp as select Empid,Empname,Gender,Salary,phone from tblemployee

insert into vwemp values(200,'Banurekha','Female',16000,'007')

--updating a view
update vwEmployeeByDept set DeptName='Sales' where empname='Anjan'

select * from tblDepartment
--views with no check option

create table testview(eid int,ename varchar(max))

insert into testview values(1,'A'),(2,'B'),(3,'C'),(4,'D'),(5,'E')

create view view1 as select eid,ename from testview where eid<5


select * from view1
select * from testview
--perform DML operations on the view
insert into view1 values(6,'F')  -- successfully inserted
update view1 set ename='G' where eid=6 -- successfully executed without any modification
                 --in the base table, b'coz this record(6) is out of scope in the view
delete from view1 where eid=6

--views with check option
alter view view1 as select eid,ename from testview where eid<5
with check option

select * from testview
select * from view1
--perform DML operations on the view
insert into view1 values(8,'I')  
update view1 set ename='G' where eid=6 
delete from view1 where eid=6


